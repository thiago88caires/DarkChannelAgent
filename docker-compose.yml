services:
  # API Backend
  backend:
    image: darkchannelagent-backend:latest
    build: ./backend
    container_name: darkchannelagent-backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - CORS_ORIGIN=http://localhost:3000
      # Supabase (internal URL hits the local gateway service name below)
      - SUPABASE_URL=${SUPABASE_URL:-http://supabase}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      # N8N
      - N8N_BASE_URL=${N8N_BASE_URL}
      - N8N_WEBHOOK_SCREENPLAY_URL=${N8N_WEBHOOK_SCREENPLAY_URL}
      - N8N_WEBHOOK_VIDEO_URL=${N8N_WEBHOOK_VIDEO_URL}
      - N8N_CALLBACK_SECRET=${N8N_CALLBACK_SECRET}
      # Payments
      - PAYMENT_PROVIDER=${PAYMENT_PROVIDER}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - CREDITS_PRICE_CENTS=${CREDITS_PRICE_CENTS:-3000}
      # Dev flags
      - ALLOW_ANON=${ALLOW_ANON:-false}
      - ALLOW_ANON_ADMIN=${ALLOW_ANON_ADMIN:-false}
    depends_on:
      supabase:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 20s
      timeout: 5s
      retries: 5

  # Web Frontend
  frontend:
    image: darkchannelagent-frontend:latest
    build: ./frontend
    container_name: darkchannelagent-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_SUPABASE_URL=${SUPABASE_URL_PUBLIC:-http://localhost:54321}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_API_BASE_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy

  # --- Supabase (self-hosted minimal stack) ---
  supabase-db:
    image: supabase/postgres:17.6.1.008
    container_name: darkchannelagent-supabase-db
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - supabase-data:/var/lib/postgresql/data
      - ./supabase/schema.sql:/docker-entrypoint-initdb.d/10-schema.sql:ro
      - ./supabase/seed.sql:/docker-entrypoint-initdb.d/20-seed.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  supabase-auth:
    image: supabase/gotrue:v2.180.0
    container_name: darkchannelagent-supabase-auth
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      DATABASE_URL: postgresql://postgres:postgres@supabase-db:5432/postgres?sslmode=disable
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_SITE_URL: http://localhost:3000
      API_EXTERNAL_URL: http://localhost:54321
      GOTRUE_DISABLE_SIGNUP: 'false'
      GOTRUE_MAILER_AUTOCONFIRM: 'true'
    depends_on:
      supabase-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9999/health"]
      interval: 15s
      timeout: 5s
      retries: 10

  supabase-rest:
    image: postgrest/postgrest:v13.0.7
    container_name: darkchannelagent-supabase-rest
    environment:
      PGRST_DB_URI: postgresql://postgres:postgres@supabase-db:5432/postgres
      PGRST_DB_SCHEMA: public,auth,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:54321
    depends_on:
      supabase-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 10

  # Simple gateway to provide a single base URL exposing /auth/v1 and /rest/v1
  supabase:
    image: nginx:alpine
    container_name: darkchannelagent-supabase-gateway
    ports:
      - "54321:80"
    volumes:
      - ./supabase/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      supabase-auth:
        condition: service_healthy
      supabase-rest:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/auth/v1/health"]
      interval: 15s
      timeout: 5s
      retries: 10

volumes:
  supabase-data:
